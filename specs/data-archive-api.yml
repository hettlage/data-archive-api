openapi: "3.0.0"

info:
  title: SAAO/SALT data archive API
  version: "0.1.0"

tags:
  - name: observations
    description:
      Observations including acquisition, science and calibration files
  - name: files
    description: FITS files
  - name: data requests
    description: Requests for FITS files
  - name: users
    description: Registered users of the data archive
  - name: linked accounts
    description: >
      Accounts for telescope user accounts, such as the
      [SALT Web Manager](https://www.salt.ac.za)
  - name: miscellaneous
    description: Miscellaneous API endpoints

paths:
  /observations/search:
    post:
      summary: Observation search
      description: >
        Create a search for obaervations. The `search_id` identifier returned by the
        request can be used as the `search_id` query parameter value in a
        `GET /observations` request.
      tags: [observations]
      operationId: createObservationSearch
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ObservationSearch'
      responses:
        "200":
          description: OK
          headers:
            Location:
              schema:
                type: string
                format: URI
              description: URI for requesting the search results
          content:
            application/json:
              schema:
                type: object
                properties:
                  search_id:
                    type: string
                    description: Identifier of the created search
                required:
                  - search_id

  /observations:
    get:
      summary: Search results for an observation search
      description: Get the results of a previously defined observation search
      tags: [observations]
      operationId: getObservations
      parameters:
        - name: search_id
          in: query
          schema:
            type: string
          required: false
          description: Identifier of a previously defined search
        - name: limit
          in: query
          schema:
            type: integer
            minimum: 1
          required: false
          description: Maximum number of search results to return
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Observation'
        "400":
          description: A search parameter has an invalid value or operator.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "404":
          $ref: '#/components/responses/NotFound'

  /files/{file_id}:
    parameters:
      - name: file_id
        in: path
        required: true
        schema:
          type: string
        description: Identifier of the requested file
    get:
      summary: Data file
      description: >
        Get metadata for a FITS data file specified by its identifier.
      tags: [files]
      operationId: getFile
      security:
        - BearerAuth: []
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/File'
        "401":
          $ref: '#/components/responses/Unauthorized'
        "403":
          $ref: '#/components/responses/Forbidden'
        "404":
          $ref: '#/components/responses/NotFound'

  /calibrations/search:
    post:
      summary: Calibration search
      description: >
        Create a search for additional calibrations (standards) which can be used for an
        observation but do not belong to the observation itself. The `search_id` identifier
        returned by the request can be used as the `search_id` query parameter value in a
        `GET /calibrations` request.
      tags: [files]
      operationId: searchCalibrations
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                for_observations:
                  type: array
                  items:
                    type: string
                  description: >
                    Identifiers of the observations for which additional calibrations are
                    requested
              required:
                - for_observations
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/File'

  /calibrations:
    get:
      summary: Search results for a calibration search
      description: Search results for a calibration search
      tags: [files]
      parameters:
        - name: search_id
          in: query
          required: true
          schema:
            type: string
            format: URI
          description: Identifier of a previously defined search
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/File'
        "400":
          description: Some of the observation identifiers in the search do not exist
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /data-requests:
    get:
      summary: Data request
      description: >
        Get the data requests made by the user. The number may be limited, and if so, the
        latest requests are returned.
      tags: [data requests]
      operationId: getDataRequests
      security:
        - BearerAuth: []
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DataRequest'
        "401":
          $ref: '#/components/responses/Unauthorized'
    post:
      summary: 'Data request for FITS files'
      description: >
        Make a data request for downloading a set of FITS files
      tags: [data requests]
      operationId: createDataRequest
      security:
        - BearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DataRequest'
      responses:
        "201":
          description: Created
          headers:
            Location:
              description: URI of the new data request
              schema:
                type: string
                format: URI
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DataRequest'
        "400":
          description: Some of the observation or file identifiers do not exist
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "401":
          $ref: '#/components/responses/Unauthorized'
        "403":
          $ref: '#/components/responses/Forbidden'

  /data-requests/{request_id}:
    parameters:
      - name: request_id
        in: path
        required: true
        schema:
          type: string
        description: Identifier of the deleted data request
    delete:
      summary: Delete the data request
      description: >
        Do not request the files in this data request any longer. If the same files are
        included in another request, they will still be requested as part of that request.
      tags: [data requests]
      operationId: deleteDataRequest
      security:
        - BearerAuth: []
      responses:
        "204":
          description: The request was deleted
        "401":
          $ref: '#/components/responses/Unauthorized'
        "403":
          $ref: '#/components/responses/Forbidden'
        "404":
          $ref: '#/components/responses/NotFound'

  /users:
    post:
      summary: Register a user
      description: Register a new user of the data archive
      tags: [users]
      operationId: createUser
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
      responses:
        "201":
          description: Created
          headers:
            Location:
              description: URI for the newly registered user
              schema:
                type: string
                format: URI
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
        "400":
          description: The username exists already or the password is too weak
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /users/{user_id}:
    parameters:
      - name: user_id
        in: path
        required: true
        schema:
          type: string
        description: User identifier
    patch:
      summary: Update a user
      description: Update some details of a data archive user
      tags: [users]
      operationId: updateUser
      security:
        - BearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserPatch'
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
        "400":
          description: The username exists already or the password is too weak
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "401":
          $ref: '#/components/responses/Unauthorized'
        "403":
          $ref: '#/components/responses/Forbidden'
        "404":
          $ref: '#/components/responses/NotFound'
    get:
      summary: User
      description: Get the details of a data archive user
      tags: [users]
      operationId: getUser
      security:
        - BearerAuth: []
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
        "401":
          $ref: '#/components/responses/Unauthorized'
        "403":
          $ref: '#/components/responses/Forbidden'
        "404":
          $ref: '#/components/responses/NotFound'

  /linked-accounts:
    get:
      summary: Linked accounts for the user
      description: Get the linked accounts for the user
      tags: [linked accounts]
      operationId: getLinkedAccounts
      security:
        - BearerAuth: []
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/LinkedAccount'
        "401":
          $ref: '#/components/responses/Unauthorized'

    post:
      summary: Link an account
      description: Link an account for the user
      tags: [linked accounts]
      operationId: linkAccount
      security:
        - BearerAuth: []
      responses:
        "201":
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LinkedAccount'
        "400":
          description: >
            The authentication credentials for the linked account are invalid, or the
            account has been linked already.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "401":
          $ref: '#/components/responses/Unauthorized'

  /linked-accounts/{linked_account_id}:
    parameters:
      - name: linked_account_id
        in: path
        required: true
        schema:
          type: string
        description: Linked account identifier

    delete:
      summary: Unlink the account
      description: Unklink the linked account
      tags: [linked accounts]
      operationId: unlinkAccount
      security:
        - BearerAuth: []
      responses:
        "204":
          description: Unlinked
        "401":
          $ref: '#/components/responses/Unauthorized'
        "403":
          $ref: '#/components/responses/Forbidden'
        "404":
          $ref: '#/components/responses/NotFound'

  /data-providers:
    get:
      summary: Data providers
      description: Providers of data for the data archive
      tags: [miscellaneous]
      operationId: getDataProviders
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DataProvider'

components:
  securitySchemes:
    BearerAuth:
      type: http
      scheme: bearer

  responses:
    # HTTP 401 error
    Unauthorized:
      description: The request did not include valid authentication credentials
      headers:
        'WWW-Authenticate':
          schema:
            type: string
          description: Information on how to authenticate correctly
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'

    # HTTP 403 error
    Forbidden:
      description: The request is not allowed for the user
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'

    # HTTP 404 error
    NotFound:
      description: The requested resource was not found
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'

  schemas:
    # error
    Error:
      type: object
      properties:
        message:
          type: string
          description: Error message
      required:
        - message

    # FITS file details
    File:
      type: object
      properties:
        id:
          type: string
          description: File identifier
        name:
          type: string
          description: Filename
        metadata:
          type: object
          properties:
            data_taken_at:
              type: string
              format: date-time
              description: When the data for this file was taken
            target:
              type: object
              properties:
                ra:
                  type: number
                  minimum: 0
                  maximum: 360
                  description: Right ascension as degrees between 0 and 360.
                dec:
                  type: number
                  minimum: -90
                  maximum: 90
                  description: Declination as degrees between -90 and 90.
                type:
                  type: string
                  description: Target type
              required:
                - ra
                - dec
                - type
          additionalProperties: true
          required:
            - data_taken_at
        fits_headers:
          type: string
          description: >
            FITS headers, exactly as included in the file. These are included if the user
            may download the file data.
        thumbnail:
          type: string
          format: byte
          description: >
            Base64-encoded thumbnail image. This is included if the user may download the
            file data.
      required:
        - id
        - name
        - metadata

    # observation search parameter
    ObservationSearchParam:
      type: object
      properties:
        keyword:
          type: string
          description: Search keyword
        value:
          oneOf:
            - type: string
            - type: number
            - type: boolean
          description: Search value
        operator:
          type: string
          enum: ['=', '!=', '<', '>', '<=', '>=', 'LIKE']
          description: SQL operator `OP` for the relation `keyword` `OP` `value`
      required:
        - keyword
        - value
        - operator

    # observation search parameters
    ObservationSearch:
      type: object
      properties:
        parameters:
          type: array
          items:
            $ref: '#/components/schemas/ObservationSearchParam'
          description: search parameters
      required:
        - parameters

    # observation
    Observation:
      properties:
        id:
          type: string
          description: Observation identifier
        name:
          type: string
          description: Human-friendly name of the observation
        available_from:
          type: string
          format: date-time
          description: When the data of the observation becomes available to the user
        files:
          type: array
          items:
            $ref: '#/components/schemas/File'
          description: FITS files taken during the observation
      required:
        - id
        - name
        - available_from
        - files

    # data request
    DataRequest:
      type: object
      properties:
        id:
          type: string
          description: Data request identifier
        observations:
          type: array
          items:
            type: object
            properties:
              id:
                type: string
                description: Observation identifier
              name:
                type: string
                readOnly: true
                description: Observation name
              files:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: string
                      description: File identifier
                    name:
                      type: string
                      readOnly: true
                      description: File name
                  required:
                    - id
                    - name
                  description: Files requested for the observation
            required:
              - id
              - name
              - files
        created_at:
          type: string
          format: date-time
          description: When the data request was made
      required:
        - id
        - observations
        - created_at

    # user
    User:
      type: object
      properties:
        id:
          type: string
          readOnly: true
          description: User identifier
        username:
          type: string
          description: Username
        password:
          type: string
          format: password
          writeOnly: true
          description: Password
        email:
          type: string
          format: email
          description: Email address
        full_name:
          type: string
          minLength: 1
          description: Full name, including first name(s) and surname
        salutation:
          type: string
          minLength: 1
          description: How the user wants to be addressed (such as "Joe" or "Joe Doe")
      required:
        - id
        - username
        - password
        - email
        - full_name
        - salutation

    # user patch
    UserPatch:
      type: object
      properties:
        username:
          type: string
          description: Username
        password:
          type: string
          format: password
          writeOnly: true
          description: Password
        email:
          type: string
          format: email
          description: Email address
        full_name:
          type: string
          minLength: 1
          description: Full name, including first name(s) and surname
        salutation:
          type: string
          minLength: 1
          description: How the user wants to be addressed (such as "Joe" or "Joe Doe")

    # linked account
    LinkedAccount:
      type: object
      properties:
        id:
          type: string
          description: Linked account identifier
        provider_id:
          type: string
          description: Identifier of the account provider
        username:
          type: string
          description: Username for the linked account
        password:
          type: string
          format: password
          writeOnly: true
          description: Password for the linked account
      required:
        - id
        - provider_id
        - username
        - password

    # data provider
    DataProvider:
      type: object
      properties:
        id:
          type: string
          description : Data provider identifier
        name:
          type: string
          description: Name of the data provider
      required:
        - id
        - name
